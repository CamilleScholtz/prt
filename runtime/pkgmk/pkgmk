#!/bin/bash

# Based on pkgmk (pkgutils) 5.40.2.

echoe() {
	echo "$1" >&2
}

get_filename() {
	local ABSOLUTE=""
	if [ "$1" = "-a" ]; then
		ABSOLUTE=1
		shift
	fi

	if [[ $1 =~ ^(http|https|ftp|file)://.*/(.+) ]]; then
		echo "$PKGMK_SOURCE_DIR/${BASH_REMATCH[2]}"
	else
		if [ "$ABSOLUTE" ]; then
			echo $PKGMK_ROOT/$1
		else
			echo $1
		fi
	fi
}

strip_files() {
	local FILE FILTER

	cd $PKG

	if [ -f $PKGMK_ROOT/$PKGMK_NOSTRIP ]; then
		FILTER="grep -v -f $PKGMK_ROOT/$PKGMK_NOSTRIP"
	else
		FILTER="cat"
	fi

	find . -type f -printf "%P\n" | $FILTER | while read FILE; do
		case $(file -b "$FILE") in
		*ELF*executable*not\ stripped*)
			strip --strip-all "$FILE"
			;;
		*ELF*shared\ object*not\ stripped*)
			strip --strip-unneeded "$FILE"
			;;
		current\ ar\ archive)
			strip --strip-debug "$FILE"
		esac
	done
}

compress_manpages() {
	local FILE DIR TARGET

	cd $PKG

	find . -type f -path "*/man/man*/*" | while read FILE; do
		if [ "$FILE" = "${FILE%%.gz}" ]; then
			gzip -9 "$FILE"
		fi
	done

	find . -type l -path "*/man/man*/*" | while read FILE; do
		TARGET=`readlink -n "$FILE"`
		TARGET="${TARGET##*/}"
		TARGET="${TARGET%%.gz}.gz"
		rm -f "$FILE"
		FILE="${FILE%%.gz}.gz"
		DIR=`dirname "$FILE"`

		if [ -e "$DIR/$TARGET" ]; then
			ln -sf "$TARGET" "$FILE"
		fi
	done
}

build_package() {
	local BUILD_SUCCESSFUL="no"
	local COMPRESSION

	cd $SRC
	(set -e -x ; build)

	if [ $? = 0 ]; then
		if [ "$PKGMK_NO_STRIP" = "no" ]; then
			strip_files
		fi

		compress_manpages

		cd $PKG
		info "Build result:"

		case $PKGMK_COMPRESSION_MODE in
			gz)  COMPRESSION="-z" ;;
			bz2) COMPRESSION="-j" ;;
			xz)  COMPRESSION="-J" ;;
		esac
		bsdtar -c $COMPRESSION -f $TARGET *  &&  bsdtar -t -v -f $TARGET

		if [ $? = 0 ]; then
			BUILD_SUCCESSFUL="yes"
		fi
	fi

	if [ "$BUILD_SUCCESSFUL" = "no" ]; then
		if [ -f $TARGET ]; then
			touch -r $PKGMK_ROOT/$PKGMK_PKGFILE $TARGET &> /dev/null
		fi
		echoe "Building '$TARGET' failed."
		exit 1
	fi
}

build_needed() {
	local FILE RESULT

	RESULT="yes"
	if [ -f $TARGET ]; then
		RESULT="no"
		for FILE in $PKGMK_PKGFILE ${source[@]}; do
			FILE=`get_filename $FILE`
			if [ ! -e $FILE ] || [ ! $TARGET -nt $FILE ]; then
				RESULT="yes"
				break
			fi
		done
	fi

	echo $RESULT
}

main() {
	PKGMK_ARCH=64
	if [ -f ".32bit" ]; then
		PKGMK_ARCH=32
	fi

	local FILE TARGET

	for FILE in $PKGMK_PKGFILE $PKGMK_CONFFILE; do
		if [ ! -f $FILE ]; then
			error "File '$FILE' not found."
			exit 1
		fi
		. $FILE
	done

	case $PKGMK_COMPRESSION_MODE in
		gz|bz2|xz)
			TARGET="$PKGMK_PACKAGE_DIR/$name#$version-$release.pkg.tar.$PKGMK_COMPRESSION_MODE"
			;;
		*)
			printe "Compression mode '$PKGMK_COMPRESSION_MODE' not supported"
			exit 1
			;;
	esac

	export PKG="$PKGMK_WORK_DIR/pkg"
	export SRC="$PKGMK_WORK_DIR/src"

	if [ "`build_needed`" = "no" ]; then
		info "Package '$TARGET' is up to date."
	else
		build_package
	fi

	exit 0
}

export LC_ALL=POSIX

readonly PKGMK_COMMAND="$0"
readonly PKGMK_ROOT="$PWD"

PKGMK_CONFFILE="/etc/pkgmk.conf"
PKGMK_PKGFILE="Pkgfile"
PKGMK_MD5SUM=".md5sum"
PKGMK_NOSTRIP=".nostrip"
PKGMK_SIGNATURE=".signature"

PKGMK_SOURCE_DIR="$PWD"
PKGMK_PACKAGE_DIR="$PWD"
PKGMK_WORK_DIR="$PWD/work"

PKGMK_COMPRESSION_MODE="gz"

PKGMK_NO_STRIP="no"

main "$@"
